#+TITLE: How quickly can you see?

[[https://tgetgood.github.io/tachi][Try the demo]] and see for yourself!

* What am I looking at?
  A game that I hope will be fun. A game where you learn to see things faster
  and more dynamically.

  The difficulty tuning is very much a work in progress.

  This is a game where you advance by getting better at something. No collecting
  junk.
* Where does it come from?
  Inspired by the work of [[https://en.wikipedia.org/wiki/Samuel_Renshaw][Sam Renshaw]] before, during, and after WWII. See also
  [[https://www.tandfonline.com/doi/abs/10.1080/00223980.1945.9917254][this paper]] and [[http://www.panshin.com/critics/Renshaw/notassmart/notassmart1.html][this copy]] of an article from the Saturday Evening Post editions
  17th & 24th of April and 1st of May 1948 (I can't testify to the accuracy of
  the transcript, but it's a great article). In particular look at the first
  image before playing the game, and then after playing a few times and you'll
  immediately see the difference

  I've adapted the ideas to modern screens with much lower reliablity than
  Renshaw's tachistoscopes (he trained some students to recognise a 7 digit
  number in only 3Î¼s and claimed that almost anyone could be trained to
  recognise one in 0.5ms), but I'm hoping there will still be some advantage to
  memory, perception, and visual comprehension to be had with the 1/15 to 1/100
  of a second duration that can be achieved on modern screens.
* Status
  The game is playable, but in flux, so until this notice goes away, assume
  you're seeing nightly material. Because you are.

  Intended for use on a device with a keyboard. It might work on mobile, but
  don't count on it. Mobile support is a goal, but not top priority.
* Experimental Mechanics
  The reason I started to write this was to see if I could train myself to widen
  my perceptual field. And to test Renshaw's claims that this sort of training
  improves reading comprehension and thus indirectly improves reading speed.

  With that in mind, let's think about the structure of levels.

  While playing this, my overwhelming impression is of being thrashed
  around. It's kind of fun, but lots of variables are beings changed under the
  hood and I have limited control or insight into control them. That's pretty
  bad considering I wrote the code last week.

  The individual ideas: longer numbers, decreasing exposure times, multiple
  images, randomised locations, etc. are still good ideas, I believe, but I need
  to isolate them from one another at first and bring them together later on.

  What's the shortest exposure time for which I can reliably memorise an N digit
  number? That's a useful metric.

  Keeping score boards: you should be able to see your own stats. That requires
  keeping them. Local storage is good enough to start.
* Difficulty Levels
  It's a game after all, so how do we make it harder as you go?
** Ideas
*** Length of number to memorise
    This is currently implemented, and for the life of me I can't get the 7
    digit numbers in less than 1/15 of a second.
*** Length of exposure
    If you can't memorise a given number size, we should show you numbers of
    that size for a longer duration and then work to shorten that duration.
*** Radomise location of text
    If you don't know where the image will pop up it requires a more gestalt
    approach to seeing, which is the point. Will help improve size of perceptual
    field.

    Will this make a difference on a small screen?

    Do we move the numbers each time you get it right, or every retry as well?
    Is that something that should scale with difficulty?
*** Force wider perceptual field
    Put multiple numbers on an ellipse, evenly spaced but with a random initial
    angle. As the player improves, increase the size of the ellipse. The
    exposure time is too short to saccade accross the whole image, so you need
    to learn to see with the edges of the macula.

    I should state now that I don't know if such learning is possible, but it's
    worth finding out.
*** Play with delay before flash
    Randomised delay prevents you from priming yourself. I think that's
    important, but my only evidence is subjective.
*** Multiple numbers
    Show columns of numbers to memorise. Or to really be a jerk just put N
    numbers at random points on the screen.
*** The Element of Scorched Earth
    Add chaff to the mix. Put words or nonsense letters on the screen but you
    only need to memorise the numbers. This might just be frustrating.
*** Text
    Words, short sentences, even whole paragraphs with longer time lapse. The
    problem longer text with this is that we need comprehension tests since pure
    regurgitation isn't what anyone wants.

    What about nonsense text (jaberwock)? Garbage text (qweoasdafht)? You could
    probably publish a cool paper about memory profiles of real language vs
    syntactically/phonetically correct nonsense vs noise text. I don't know if
    it would be any fun for players though.
*** Image matching
    Show 4+ images and make the player figure out which are the same. They can
    creep together like Pavlov's circle & ellipse if I feel sadistic.
*** Bird watching
    What bird did you just see? How many? which way were they going?

    Basically replicated Renshaw's work for the navy during WWII, but with
    birds instead of fighter planes.

    I think this would be fun and useful, but I'll need to find and label the
    images.

    Assumes you care about birds. Could also use trees, mushrooms, fish, you
    name it. People who hunt mushrooms regulary see more mushrooms at a glance
    than you do in an hour of staring. There's huge room for improvement for
    most of us, but maybe you'd do better turning this off and going out in the
    woods.
